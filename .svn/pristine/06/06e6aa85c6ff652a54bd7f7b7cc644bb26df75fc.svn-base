package com.tynet.model;

import java.util.ArrayList;
import java.util.List;

public class JzPatientChildExample {
    protected String pk_name;

    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public JzPatientChildExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setPk_name(String pk_name) {
        this.pk_name = pk_name;
    }

    public String getPk_name() {
        return pk_name;
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPatientIdIsNull() {
            addCriterion("PATIENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andPatientIdIsNotNull() {
            addCriterion("PATIENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientIdEqualTo(Long value) {
            addCriterion("PATIENT_ID =", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdNotEqualTo(Long value) {
            addCriterion("PATIENT_ID <>", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdGreaterThan(Long value) {
            addCriterion("PATIENT_ID >", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PATIENT_ID >=", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdLessThan(Long value) {
            addCriterion("PATIENT_ID <", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdLessThanOrEqualTo(Long value) {
            addCriterion("PATIENT_ID <=", value, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdIn(List<Long> values) {
            addCriterion("PATIENT_ID in", values, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdNotIn(List<Long> values) {
            addCriterion("PATIENT_ID not in", values, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdBetween(Long value1, Long value2) {
            addCriterion("PATIENT_ID between", value1, value2, "patientId");
            return (Criteria) this;
        }

        public Criteria andPatientIdNotBetween(Long value1, Long value2) {
            addCriterion("PATIENT_ID not between", value1, value2, "patientId");
            return (Criteria) this;
        }

        public Criteria andChildIdIsNull() {
            addCriterion("CHILD_ID is null");
            return (Criteria) this;
        }

        public Criteria andChildIdIsNotNull() {
            addCriterion("CHILD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andChildIdEqualTo(String value) {
            addCriterion("CHILD_ID =", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdNotEqualTo(String value) {
            addCriterion("CHILD_ID <>", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdGreaterThan(String value) {
            addCriterion("CHILD_ID >", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdGreaterThanOrEqualTo(String value) {
            addCriterion("CHILD_ID >=", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdLessThan(String value) {
            addCriterion("CHILD_ID <", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdLessThanOrEqualTo(String value) {
            addCriterion("CHILD_ID <=", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdLike(String value) {
            addCriterion("CHILD_ID like", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdNotLike(String value) {
            addCriterion("CHILD_ID not like", value, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdIn(List<String> values) {
            addCriterion("CHILD_ID in", values, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdNotIn(List<String> values) {
            addCriterion("CHILD_ID not in", values, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdBetween(String value1, String value2) {
            addCriterion("CHILD_ID between", value1, value2, "childId");
            return (Criteria) this;
        }

        public Criteria andChildIdNotBetween(String value1, String value2) {
            addCriterion("CHILD_ID not between", value1, value2, "childId");
            return (Criteria) this;
        }

        public Criteria andChildBirthIsNull() {
            addCriterion("CHILD_BIRTH is null");
            return (Criteria) this;
        }

        public Criteria andChildBirthIsNotNull() {
            addCriterion("CHILD_BIRTH is not null");
            return (Criteria) this;
        }

        public Criteria andChildBirthEqualTo(String value) {
            addCriterion("CHILD_BIRTH =", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthNotEqualTo(String value) {
            addCriterion("CHILD_BIRTH <>", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthGreaterThan(String value) {
            addCriterion("CHILD_BIRTH >", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthGreaterThanOrEqualTo(String value) {
            addCriterion("CHILD_BIRTH >=", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthLessThan(String value) {
            addCriterion("CHILD_BIRTH <", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthLessThanOrEqualTo(String value) {
            addCriterion("CHILD_BIRTH <=", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthLike(String value) {
            addCriterion("CHILD_BIRTH like", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthNotLike(String value) {
            addCriterion("CHILD_BIRTH not like", value, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthIn(List<String> values) {
            addCriterion("CHILD_BIRTH in", values, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthNotIn(List<String> values) {
            addCriterion("CHILD_BIRTH not in", values, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthBetween(String value1, String value2) {
            addCriterion("CHILD_BIRTH between", value1, value2, "childBirth");
            return (Criteria) this;
        }

        public Criteria andChildBirthNotBetween(String value1, String value2) {
            addCriterion("CHILD_BIRTH not between", value1, value2, "childBirth");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}