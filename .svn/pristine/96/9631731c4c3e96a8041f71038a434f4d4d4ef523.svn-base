<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.tynet.dao.JzChildVaccinePlanMapper" >
  <resultMap id="BaseResultMap" type="com.tynet.model.JzChildVaccinePlan" >
    <result column="CHILD_ID" property="childId" jdbcType="VARCHAR" />
    <result column="PLAN_ID" property="planId" jdbcType="VARCHAR" />
    <result column="VACCINE_ID" property="vaccineId" jdbcType="VARCHAR" />
    <result column="VACCINE_DATE" property="vaccineDate" jdbcType="TIMESTAMP" />
    <result column="EXPECT_VACCINE_DATE" property="expectVaccineDate" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="com.tynet.model.JzChildVaccinePlan" id="ResultChildPlane" >
    <result column="CHILD_ID" property="childId" jdbcType="VARCHAR" />
    <result column="PLAN_ID" property="planId" jdbcType="VARCHAR" />
    <result column="VACCINE_DATE" property="vaccineDate" jdbcType="TIMESTAMP" />
    <result column="EXPECT_VACCINE_DATE" property="expectVaccineDate" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="VACCINE_ID" property="vaccineId" jdbcType="VARCHAR" />
    <result column="TIMES" property="times" jdbcType="VARCHAR" />
    <result column="AGE_ZH_CN" property="ageZhCh" jdbcType="VARCHAR" />
    <result column="VACCINE_NAME" property="vaccineName" jdbcType="VARCHAR" />
    <result column="VACCINE_DISEASE" property="vaccineDisease" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    CHILD_ID, PLAN_ID, VACCINE_ID, VACCINE_DATE, EXPECT_VACCINE_DATE, "STATE"
  </sql>
  <sql id="Child_Plane_List">
      cvp.child_id,cvp.plan_id,pp.vaccine_id VACCINE_ID,cvp.vaccine_date,cvp.expect_vaccine_date,cvp.state,pp.times,pp.AGE_ZH_CN,pp.vaccine_name,pp.VACCINE_DISEASE
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tynet.model.JzChildVaccinePlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JZ_CHILD_VACCINE_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectChildPlane" resultMap="ResultChildPlane" parameterType="java.lang.String">
      select <include refid="Child_Plane_List"/> from (select * from JZ_CHILD_VACCINE_PLAN  where CHILD_ID=#{childId}) cvp
left join ( select vp.plan_id,vp.vaccine_id,vp.times,vp.age,vp.AGE_ZH_CN,v.vaccine_name,v.VACCINE_DISEASE from (select * from JZ_VACCINE_PLAN where STATUS=0 ) vp 
left join (select * from JZ_VACCINE where VACCINE_STATE=0) v 
on vp.vaccine_id=v.vaccine_id) pp on cvp.plan_id=pp.plan_id order by cvp.expect_vaccine_date
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.tynet.model.JzChildVaccinePlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JZ_CHILD_VACCINE_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tynet.model.JzChildVaccinePlanExample" >
    delete from JZ_CHILD_VACCINE_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.tynet.model.JzChildVaccinePlanExample" resultType="java.lang.Integer" >
    select count(*) from JZ_CHILD_VACCINE_PLAN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update JZ_CHILD_VACCINE_PLAN
    <set >
      <if test="record.childId != null" >
        CHILD_ID = #{record.childId,jdbcType=VARCHAR},
      </if>
      <if test="record.planId != null" >
        PLAN_ID = #{record.planId,jdbcType=VARCHAR},
      </if>
      <if test="record.vaccineId != null" >
        VACCINE_ID = #{record.vaccineId,jdbcType=VARCHAR},
      </if>
      <if test="record.vaccineDate != null" >
        VACCINE_DATE = #{record.vaccineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expectVaccineDate != null" >
        EXPECT_VACCINE_DATE = #{record.expectVaccineDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        "STATE" = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update JZ_CHILD_VACCINE_PLAN
    set CHILD_ID = #{record.childId,jdbcType=VARCHAR},
      PLAN_ID = #{record.planId,jdbcType=VARCHAR},
      VACCINE_ID = #{record.vaccineId,jdbcType=VARCHAR},
      VACCINE_DATE = #{record.vaccineDate,jdbcType=TIMESTAMP},
      EXPECT_VACCINE_DATE = #{record.expectVaccineDate,jdbcType=TIMESTAMP},
      "STATE" = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="com.tynet.model.JzChildVaccinePlan" >
    insert into JZ_CHILD_VACCINE_PLAN (CHILD_ID, PLAN_ID, VACCINE_ID, 
      VACCINE_DATE, EXPECT_VACCINE_DATE, "STATE"
      )
    values (#{childId,jdbcType=VARCHAR}, #{planId,jdbcType=VARCHAR}, #{vaccineId,jdbcType=VARCHAR}, 
      #{vaccineDate,jdbcType=TIMESTAMP}, #{expectVaccineDate,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tynet.model.JzChildVaccinePlan" >
    insert into JZ_CHILD_VACCINE_PLAN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      CHILD_ID,
      PLAN_ID,
      VACCINE_ID,
      VACCINE_DATE,
      EXPECT_VACCINE_DATE,
      "STATE",
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{childId,jdbcType=VARCHAR},
      #{planId,jdbcType=VARCHAR},
      #{vaccineId,jdbcType=VARCHAR},
      #{vaccineDate,jdbcType=TIMESTAMP},
      #{expectVaccineDate,jdbcType=TIMESTAMP},
      #{state,jdbcType=VARCHAR},
    </trim>
  </insert>
</mapper>