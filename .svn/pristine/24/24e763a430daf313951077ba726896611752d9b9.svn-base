<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.defray.dao.RefundRecordMapper">

	<resultMap id="BASE-RESULT" type="com.defray.bean.RefundRecordEntity">
		<result property="id" column="id" />
		<result property="abnormalUrl" column="abnormal_url" />
		<result property="noticeUrl" column="notice_url" />
		<result property="refundStartTime" column="refund_start_time" />
		<result property="defrayType" column="defray_type" />
		<result property="refundFee" column="refund_fee" />
		<result property="orderId" column="order_id" />
		<result property="psnId" column="psnId" />
		<result property="hospitalId" column="hospital_id" />
		<result property="refundResult" column="refund_result" />
		<result property="sellerAccount" column="seller_account" />
		<result property="buyerAccount" column="buyer_account" />
		<result property="tradeNo" column="trade_no" />
		<result property="noticeResult" column="notice_result" />
		<result property="recordStatus" column="record_status" />
	</resultMap>

	
  	<insert id="insert" parameterType="com.defray.bean.RefundRecordEntity">
  		INSERT INTO pp_refund_record ( 
			id,abnormal_url,notice_url,refund_start_time,defray_type,refund_fee,order_id,psnId,hospital_id,refund_result,seller_account,buyer_account,trade_no,notice_result,record_status			
  		) VALUES (
			#{id},#{abnormalUrl},#{noticeUrl},#{refundStartTime},#{defrayType},#{refundFee},#{orderId},#{psnId},#{hospitalId},#{refundResult},#{sellerAccount},#{buyerAccount},#{tradeNo},#{noticeResult},#{recordStatus}			
  		)   
    	<selectKey resultType="Integer" keyProperty="id">    
      		SELECT LAST_INSERT_ID()     
		</selectKey>
  	</insert>
  	
  	<update id="update" parameterType="com.defray.bean.RefundRecordEntity" >
		UPDATE
			pp_refund_record
		SET
			 <if test="id!=null"> id = #{id} </if>
			 <if test="abnormalUrl!=null">, abnormal_url = #{abnormalUrl} </if>
			 <if test="noticeUrl!=null">, notice_url = #{noticeUrl} </if>
			 <if test="refundStartTime!=null">, refund_start_time = #{refundStartTime} </if>
			 <if test="defrayType!=null">, defray_type = #{defrayType} </if>
			 <if test="refundFee!=null">, refund_fee = #{refundFee} </if>
			 <if test="orderId!=null">, order_id = #{orderId} </if>
			 <if test="psnId!=null">, psnId = #{psnId} </if>
			 <if test="hospitalId!=null">, hospital_id = #{hospitalId} </if>
			 <if test="refundResult!=null">, refund_result = #{refundResult} </if>
			 <if test="sellerAccount!=null">, seller_account = #{sellerAccount} </if>
			 <if test="buyerAccount!=null">, buyer_account = #{buyerAccount} </if>
			 <if test="tradeNo!=null">, trade_no = #{tradeNo} </if>
			 <if test="noticeResult!=null">, notice_result = #{noticeResult} </if>
			 <if test="recordStatus!=null">, record_status = #{recordStatus} </if>
		<where>
			id = #{id}
		</where>
	</update>
	
	
	<select id="getByKey" resultMap="BASE-RESULT">
		SELECT * FROM
			pp_refund_record
		<where>
			id = #{key}
		</where>
	</select>
	
	<delete id="deleteByKey">
		DELETE FROM
			pp_refund_record
		<where>
			id = #{key}
		</where>
	</delete>
	
	<select id="findEntitys" parameterType="map" resultMap="BASE-RESULT">
		SELECT * FROM
			pp_refund_record
		<where>
			<include refid="compareParamColumns" />
		</where>
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>


	<select id="getEntitysCount" parameterType="map" resultType="int">
		SELECT count(*) FROM
			pp_refund_record
		<where>
			<include refid="compareParamColumns" />
		</where>
	</select>
	
	<sql id="compareParamColumns">
		1
  		<if test="param.id!=null">
  			AND  id = #{param.id}
  		</if>
  		<if test="param.abnormalUrl!=null">
  			AND  abnormal_url = #{param.abnormalUrl}
  		</if>
  		<if test="param.noticeUrl!=null">
  			AND  notice_url = #{param.noticeUrl}
  		</if>
  		<if test="param.refundStartTime!=null">
  			AND  refund_start_time = #{param.refundStartTime}
  		</if>
  		<if test="param.defrayType!=null">
  			AND  defray_type = #{param.defrayType}
  		</if>
  		<if test="param.refundFee!=null">
  			AND  refund_fee = #{param.refundFee}
  		</if>
  		<if test="param.orderId!=null">
  			AND  order_id = #{param.orderId}
  		</if>
  		<if test="param.psnId!=null">
  			AND  psnId = #{param.psnId}
  		</if>
  		<if test="param.hospitalId!=null">
  			AND  hospital_id = #{param.hospitalId}
  		</if>
  		<if test="param.refundResult!=null">
  			AND  refund_result = #{param.refundResult}
  		</if>
  		<if test="param.sellerAccount!=null">
  			AND  seller_account = #{param.sellerAccount}
  		</if>
  		<if test="param.buyerAccount!=null">
  			AND  buyer_account = #{param.buyerAccount}
  		</if>
  		<if test="param.tradeNo!=null">
  			AND  trade_no = #{param.tradeNo}
  		</if>
  		<if test="param.noticeResult!=null">
  			AND  notice_result = #{param.noticeResult}
  		</if>
  		<if test="param.recordStatus!=null">
  			AND  record_status = #{param.recordStatus}
  		</if>
	</sql>
	
	<!-- mybatis-config.xml 
	<typeAlias alias="RefundRecordEntity" 	type="bean.RefundRecordEntity" />
	<mapper resource="sql-mapper/RefundRecordMapper.xml" />
	-->
	<!-- spring-dao-beans.xml
	<bean id="RefundRecordDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
    	<property name="mapperInterface" value="dao.RefundRecordDao" />  
    	<property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	</bean>
	-->
</mapper>