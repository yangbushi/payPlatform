package com.tynet.model;

import java.util.ArrayList;
import java.util.List;

public class GhZszyAccessExample {
    protected String pk_name = "ID";

    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public GhZszyAccessExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setPk_name(String pk_name) {
        this.pk_name = pk_name;
    }

    public String getPk_name() {
        return pk_name;
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPhonekeyIsNull() {
            addCriterion("PHONEKEY is null");
            return (Criteria) this;
        }

        public Criteria andPhonekeyIsNotNull() {
            addCriterion("PHONEKEY is not null");
            return (Criteria) this;
        }

        public Criteria andPhonekeyEqualTo(String value) {
            addCriterion("PHONEKEY =", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyNotEqualTo(String value) {
            addCriterion("PHONEKEY <>", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyGreaterThan(String value) {
            addCriterion("PHONEKEY >", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyGreaterThanOrEqualTo(String value) {
            addCriterion("PHONEKEY >=", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyLessThan(String value) {
            addCriterion("PHONEKEY <", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyLessThanOrEqualTo(String value) {
            addCriterion("PHONEKEY <=", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyLike(String value) {
            addCriterion("PHONEKEY like", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyNotLike(String value) {
            addCriterion("PHONEKEY not like", value, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyIn(List<String> values) {
            addCriterion("PHONEKEY in", values, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyNotIn(List<String> values) {
            addCriterion("PHONEKEY not in", values, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyBetween(String value1, String value2) {
            addCriterion("PHONEKEY between", value1, value2, "phonekey");
            return (Criteria) this;
        }

        public Criteria andPhonekeyNotBetween(String value1, String value2) {
            addCriterion("PHONEKEY not between", value1, value2, "phonekey");
            return (Criteria) this;
        }

        public Criteria andAccessvalueIsNull() {
            addCriterion("ACCESSVALUE is null");
            return (Criteria) this;
        }

        public Criteria andAccessvalueIsNotNull() {
            addCriterion("ACCESSVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andAccessvalueEqualTo(String value) {
            addCriterion("ACCESSVALUE =", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueNotEqualTo(String value) {
            addCriterion("ACCESSVALUE <>", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueGreaterThan(String value) {
            addCriterion("ACCESSVALUE >", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueGreaterThanOrEqualTo(String value) {
            addCriterion("ACCESSVALUE >=", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueLessThan(String value) {
            addCriterion("ACCESSVALUE <", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueLessThanOrEqualTo(String value) {
            addCriterion("ACCESSVALUE <=", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueLike(String value) {
            addCriterion("ACCESSVALUE like", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueNotLike(String value) {
            addCriterion("ACCESSVALUE not like", value, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueIn(List<String> values) {
            addCriterion("ACCESSVALUE in", values, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueNotIn(List<String> values) {
            addCriterion("ACCESSVALUE not in", values, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueBetween(String value1, String value2) {
            addCriterion("ACCESSVALUE between", value1, value2, "accessvalue");
            return (Criteria) this;
        }

        public Criteria andAccessvalueNotBetween(String value1, String value2) {
            addCriterion("ACCESSVALUE not between", value1, value2, "accessvalue");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}