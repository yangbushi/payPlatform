<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.tynet.dao.GhRateMapper" >
  <resultMap id="BaseResultMap" type="com.tynet.model.GhRate" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="PATIENT_ID" property="patientId" jdbcType="DECIMAL" />
    <result column="ORDER_ID" property="orderId" jdbcType="DECIMAL" />
    <result column="HOS_ID" property="hosId" jdbcType="DECIMAL" />
    <result column="DEPT_ID" property="deptId" jdbcType="VARCHAR" />
    <result column="DOC_ID" property="docId" jdbcType="VARCHAR" />
    <result column="RATE_PLAT" property="ratePlat" jdbcType="DECIMAL" />
    <result column="RATE_HOSPITAL" property="rateHospital" jdbcType="DECIMAL" />
    <result column="RATE_DOCTOR" property="rateDoctor" jdbcType="DECIMAL" />
    <result column="CLINIC_REASON" property="clinicReason" jdbcType="VARCHAR" />
    <result column="CLINIC_TIME" property="clinicTime" jdbcType="DATE" />
    <result column="RATE_CONTENT" property="rateContent" jdbcType="VARCHAR" />
    <result column="RATE_TIME" property="rateTime" jdbcType="DATE" />
    <result column="SCHID" property="schId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, PATIENT_ID, ORDER_ID, HOS_ID, DEPT_ID, DOC_ID, RATE_PLAT, RATE_HOSPITAL, RATE_DOCTOR, 
    CLINIC_REASON, CLINIC_TIME, RATE_CONTENT, RATE_TIME
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tynet.model.GhRateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GH_RATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.tynet.model.GhRateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GH_RATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tynet.model.GhRateExample" >
    delete from GH_RATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.tynet.model.GhRateExample" resultType="java.lang.Integer" >
    select count(*) from GH_RATE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update GH_RATE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.patientId != null" >
        PATIENT_ID = #{record.patientId,jdbcType=DECIMAL},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      </if>
      <if test="record.hosId != null" >
        HOS_ID = #{record.hosId,jdbcType=DECIMAL},
      </if>
      <if test="record.deptId != null" >
        DEPT_ID = #{record.deptId,jdbcType=DECIMAL},
      </if>
      <if test="record.docId != null" >
        DOC_ID = #{record.docId,jdbcType=DECIMAL},
      </if>
      <if test="record.ratePlat != null" >
        RATE_PLAT = #{record.ratePlat,jdbcType=DECIMAL},
      </if>
      <if test="record.rateHospital != null" >
        RATE_HOSPITAL = #{record.rateHospital,jdbcType=DECIMAL},
      </if>
      <if test="record.rateDoctor != null" >
        RATE_DOCTOR = #{record.rateDoctor,jdbcType=DECIMAL},
      </if>
      <if test="record.clinicReason != null" >
        CLINIC_REASON = #{record.clinicReason,jdbcType=VARCHAR},
      </if>
      <if test="record.clinicTime != null" >
        CLINIC_TIME = #{record.clinicTime,jdbcType=DATE},
      </if>
      <if test="record.rateContent != null" >
        RATE_CONTENT = #{record.rateContent,jdbcType=VARCHAR},
      </if>
      <if test="record.rateTime != null" >
        RATE_TIME = #{record.rateTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update GH_RATE
    set ID = #{record.id,jdbcType=DECIMAL},
      PATIENT_ID = #{record.patientId,jdbcType=DECIMAL},
      ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      HOS_ID = #{record.hosId,jdbcType=DECIMAL},
      DEPT_ID = #{record.deptId,jdbcType=DECIMAL},
      DOC_ID = #{record.docId,jdbcType=DECIMAL},
      RATE_PLAT = #{record.ratePlat,jdbcType=DECIMAL},
      RATE_HOSPITAL = #{record.rateHospital,jdbcType=DECIMAL},
      RATE_DOCTOR = #{record.rateDoctor,jdbcType=DECIMAL},
      CLINIC_REASON = #{record.clinicReason,jdbcType=VARCHAR},
      CLINIC_TIME = #{record.clinicTime,jdbcType=DATE},
      RATE_CONTENT = #{record.rateContent,jdbcType=VARCHAR},
      RATE_TIME = #{record.rateTime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from GH_RATE
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from GH_RATE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.tynet.model.GhRate" >
    insert into GH_RATE (ID, PATIENT_ID, ORDER_ID, 
      HOS_ID, DEPT_ID, DOC_ID, 
      RATE_PLAT, RATE_HOSPITAL, RATE_DOCTOR, 
      CLINIC_REASON, CLINIC_TIME, RATE_CONTENT, 
      RATE_TIME,TYPE,schId)
    values (SEQ_GH_RATE.NEXTVAL, #{patientId,jdbcType=DECIMAL}, #{orderId,jdbcType=DECIMAL}, 
      #{hosId,jdbcType=DECIMAL}, #{deptId,jdbcType=VARCHAR}, #{docId,jdbcType=VARCHAR}, 
      #{ratePlat,jdbcType=DECIMAL}, #{rateHospital,jdbcType=DECIMAL}, #{rateDoctor,jdbcType=DECIMAL}, 
      #{clinicReason,jdbcType=VARCHAR}, #{clinicTime,jdbcType=DATE}, #{rateContent,jdbcType=VARCHAR}, 
      sysdate,#{type,jdbcType=VARCHAR},#{schId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tynet.model.GhRate" >
    insert into GH_RATE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      PATIENT_ID,
      ORDER_ID,
      HOS_ID,
      DEPT_ID,
      DOC_ID,
      RATE_PLAT,
      RATE_HOSPITAL,
      RATE_DOCTOR,
      CLINIC_REASON,
      CLINIC_TIME,
      RATE_CONTENT,
      RATE_TIME,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=DECIMAL},
      #{patientId,jdbcType=DECIMAL},
      #{orderId,jdbcType=DECIMAL},
      #{hosId,jdbcType=DECIMAL},
      #{deptId,jdbcType=DECIMAL},
      #{docId,jdbcType=DECIMAL},
      #{ratePlat,jdbcType=DECIMAL},
      #{rateHospital,jdbcType=DECIMAL},
      #{rateDoctor,jdbcType=DECIMAL},
      #{clinicReason,jdbcType=VARCHAR},
      #{clinicTime,jdbcType=DATE},
      #{rateContent,jdbcType=VARCHAR},
      #{rateTime,jdbcType=DATE},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tynet.model.GhRate" >
    update GH_RATE
    <set >
      <if test="patientId != null" >
        PATIENT_ID = #{patientId,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="hosId != null" >
        HOS_ID = #{hosId,jdbcType=DECIMAL},
      </if>
      <if test="deptId != null" >
        DEPT_ID = #{deptId,jdbcType=DECIMAL},
      </if>
      <if test="docId != null" >
        DOC_ID = #{docId,jdbcType=DECIMAL},
      </if>
      <if test="ratePlat != null" >
        RATE_PLAT = #{ratePlat,jdbcType=DECIMAL},
      </if>
      <if test="rateHospital != null" >
        RATE_HOSPITAL = #{rateHospital,jdbcType=DECIMAL},
      </if>
      <if test="rateDoctor != null" >
        RATE_DOCTOR = #{rateDoctor,jdbcType=DECIMAL},
      </if>
      <if test="clinicReason != null" >
        CLINIC_REASON = #{clinicReason,jdbcType=VARCHAR},
      </if>
      <if test="clinicTime != null" >
        CLINIC_TIME = #{clinicTime,jdbcType=DATE},
      </if>
      <if test="rateContent != null" >
        RATE_CONTENT = #{rateContent,jdbcType=VARCHAR},
      </if>
      <if test="rateTime != null" >
        RATE_TIME = #{rateTime,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tynet.model.GhRate" >
    update GH_RATE
    set PATIENT_ID = #{patientId,jdbcType=DECIMAL},
      ORDER_ID = #{orderId,jdbcType=DECIMAL},
      HOS_ID = #{hosId,jdbcType=DECIMAL},
      DEPT_ID = #{deptId,jdbcType=DECIMAL},
      DOC_ID = #{docId,jdbcType=DECIMAL},
      RATE_PLAT = #{ratePlat,jdbcType=DECIMAL},
      RATE_HOSPITAL = #{rateHospital,jdbcType=DECIMAL},
      RATE_DOCTOR = #{rateDoctor,jdbcType=DECIMAL},
      CLINIC_REASON = #{clinicReason,jdbcType=VARCHAR},
      CLINIC_TIME = #{clinicTime,jdbcType=DATE},
      RATE_CONTENT = #{rateContent,jdbcType=VARCHAR},
      RATE_TIME = #{rateTime,jdbcType=DATE}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="queryRateListByDocId" resultMap="BaseResultMap" parameterType="java.lang.String">
	select * from (select RATE_PLAT, RATE_HOSPITAL,RATE_DOCTOR from GH_RATE where DOC_ID=#{docId}
	order by ID DESC)
  </select>
  
   <select id="queryRateList" resultMap="BaseResultMap">
	select * from  GH_RATE where PATIENT_ID=#{patId,jdbcType=VARCHAR} and SCHID=#{schid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectRateDoc" resultType="java.lang.Long" parameterType="java.lang.Integer">
      select NVL(round(avg(rate_doctor),1),0) from gh_rate where doc_id=#{docId}
  </select>
</mapper>