package com.tynet.model;

import java.util.ArrayList;
import java.util.List;

public class SurveyResultExample {
    protected String pk_name;

    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public SurveyResultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setPk_name(String pk_name) {
        this.pk_name = pk_name;
    }

    public String getPk_name() {
        return pk_name;
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScoreIdIsNull() {
            addCriterion("SCORE_ID is null");
            return (Criteria) this;
        }

        public Criteria andScoreIdIsNotNull() {
            addCriterion("SCORE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andScoreIdEqualTo(Long value) {
            addCriterion("SCORE_ID =", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdNotEqualTo(Long value) {
            addCriterion("SCORE_ID <>", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdGreaterThan(Long value) {
            addCriterion("SCORE_ID >", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SCORE_ID >=", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdLessThan(Long value) {
            addCriterion("SCORE_ID <", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdLessThanOrEqualTo(Long value) {
            addCriterion("SCORE_ID <=", value, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdIn(List<Long> values) {
            addCriterion("SCORE_ID in", values, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdNotIn(List<Long> values) {
            addCriterion("SCORE_ID not in", values, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdBetween(Long value1, Long value2) {
            addCriterion("SCORE_ID between", value1, value2, "scoreId");
            return (Criteria) this;
        }

        public Criteria andScoreIdNotBetween(Long value1, Long value2) {
            addCriterion("SCORE_ID not between", value1, value2, "scoreId");
            return (Criteria) this;
        }

        public Criteria andSIdIsNull() {
            addCriterion("S_ID is null");
            return (Criteria) this;
        }

        public Criteria andSIdIsNotNull() {
            addCriterion("S_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSIdEqualTo(Long value) {
            addCriterion("S_ID =", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdNotEqualTo(Long value) {
            addCriterion("S_ID <>", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdGreaterThan(Long value) {
            addCriterion("S_ID >", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdGreaterThanOrEqualTo(Long value) {
            addCriterion("S_ID >=", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdLessThan(Long value) {
            addCriterion("S_ID <", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdLessThanOrEqualTo(Long value) {
            addCriterion("S_ID <=", value, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdIn(List<Long> values) {
            addCriterion("S_ID in", values, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdNotIn(List<Long> values) {
            addCriterion("S_ID not in", values, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdBetween(Long value1, Long value2) {
            addCriterion("S_ID between", value1, value2, "sId");
            return (Criteria) this;
        }

        public Criteria andSIdNotBetween(Long value1, Long value2) {
            addCriterion("S_ID not between", value1, value2, "sId");
            return (Criteria) this;
        }

        public Criteria andScoreMinIsNull() {
            addCriterion("SCORE_MIN is null");
            return (Criteria) this;
        }

        public Criteria andScoreMinIsNotNull() {
            addCriterion("SCORE_MIN is not null");
            return (Criteria) this;
        }

        public Criteria andScoreMinEqualTo(Integer value) {
            addCriterion("SCORE_MIN =", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinNotEqualTo(Integer value) {
            addCriterion("SCORE_MIN <>", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinGreaterThan(Integer value) {
            addCriterion("SCORE_MIN >", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinGreaterThanOrEqualTo(Integer value) {
            addCriterion("SCORE_MIN >=", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinLessThan(Integer value) {
            addCriterion("SCORE_MIN <", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinLessThanOrEqualTo(Integer value) {
            addCriterion("SCORE_MIN <=", value, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinIn(List<Integer> values) {
            addCriterion("SCORE_MIN in", values, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinNotIn(List<Integer> values) {
            addCriterion("SCORE_MIN not in", values, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinBetween(Integer value1, Integer value2) {
            addCriterion("SCORE_MIN between", value1, value2, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMinNotBetween(Integer value1, Integer value2) {
            addCriterion("SCORE_MIN not between", value1, value2, "scoreMin");
            return (Criteria) this;
        }

        public Criteria andScoreMaxIsNull() {
            addCriterion("SCORE_MAX is null");
            return (Criteria) this;
        }

        public Criteria andScoreMaxIsNotNull() {
            addCriterion("SCORE_MAX is not null");
            return (Criteria) this;
        }

        public Criteria andScoreMaxEqualTo(Integer value) {
            addCriterion("SCORE_MAX =", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxNotEqualTo(Integer value) {
            addCriterion("SCORE_MAX <>", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxGreaterThan(Integer value) {
            addCriterion("SCORE_MAX >", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxGreaterThanOrEqualTo(Integer value) {
            addCriterion("SCORE_MAX >=", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxLessThan(Integer value) {
            addCriterion("SCORE_MAX <", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxLessThanOrEqualTo(Integer value) {
            addCriterion("SCORE_MAX <=", value, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxIn(List<Integer> values) {
            addCriterion("SCORE_MAX in", values, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxNotIn(List<Integer> values) {
            addCriterion("SCORE_MAX not in", values, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxBetween(Integer value1, Integer value2) {
            addCriterion("SCORE_MAX between", value1, value2, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreMaxNotBetween(Integer value1, Integer value2) {
            addCriterion("SCORE_MAX not between", value1, value2, "scoreMax");
            return (Criteria) this;
        }

        public Criteria andScoreResultIsNull() {
            addCriterion("SCORE_RESULT is null");
            return (Criteria) this;
        }

        public Criteria andScoreResultIsNotNull() {
            addCriterion("SCORE_RESULT is not null");
            return (Criteria) this;
        }

        public Criteria andScoreResultEqualTo(String value) {
            addCriterion("SCORE_RESULT =", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultNotEqualTo(String value) {
            addCriterion("SCORE_RESULT <>", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultGreaterThan(String value) {
            addCriterion("SCORE_RESULT >", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultGreaterThanOrEqualTo(String value) {
            addCriterion("SCORE_RESULT >=", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultLessThan(String value) {
            addCriterion("SCORE_RESULT <", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultLessThanOrEqualTo(String value) {
            addCriterion("SCORE_RESULT <=", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultLike(String value) {
            addCriterion("SCORE_RESULT like", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultNotLike(String value) {
            addCriterion("SCORE_RESULT not like", value, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultIn(List<String> values) {
            addCriterion("SCORE_RESULT in", values, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultNotIn(List<String> values) {
            addCriterion("SCORE_RESULT not in", values, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultBetween(String value1, String value2) {
            addCriterion("SCORE_RESULT between", value1, value2, "scoreResult");
            return (Criteria) this;
        }

        public Criteria andScoreResultNotBetween(String value1, String value2) {
            addCriterion("SCORE_RESULT not between", value1, value2, "scoreResult");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}